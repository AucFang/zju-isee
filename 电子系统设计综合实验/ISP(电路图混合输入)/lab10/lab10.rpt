|--------------------------------------------------------------|
|- ispLEVER Classic 2.1.00.02.49.20 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  lab10
Project Path         :  D:\isp\lab10
Project Fitted on    :  Fri May 26 12:04:56 2023

Device               :  M4256_64
Package              :  100
GLB Input Mux Size   :  33
Available Blocks     :  16
Speed                :  -7.5
Part Number          :  LC4256V-75T100I
Source Format        :  Schematic_Verilog_HDL


// Project 'lab10' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.06 secs
Partition Time                  0.03 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                4
Total Logic Functions           59
  Total Output Pins             15
  Total Bidir I/O Pins          0
  Total Buried Nodes            44
Total Flip-Flops                58
  Total D Flip-Flops            39
  Total T Flip-Flops            11
  Total Latches                 8
Total Product Terms             327

Total Reserved Pins             0
Total Locked Pins               19
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             4
Total Unique Clock Enables      2
Total Unique Resets             1
Total Unique Presets            1

Fmax Logic Levels               1


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        2      2    -->    50
  Input-Only Pins                   6        0      6    -->     0
  I/O / Enable Pins                 2        0      2    -->     0
I/O Pins                           62       17     45    -->    27
Logic Functions                   256       59    197    -->    23
  Input Registers                  64        0     64    -->     0

GLB Inputs                        576      176    400    -->    30
Logical Product Terms            1280      248   1032    -->    19
Occupied GLBs                      16       16      0    -->   100
Macrocells                        256       59    197    -->    23

Control Product Terms:
  GLB Clock/Clock Enables          16        9      7    -->    56
  GLB Reset/Presets                16        0     16    -->     0
  Macrocell Clocks                256        9    247    -->     3
  Macrocell Clock Enables         256        5    251    -->     1
  Macrocell Enables               256        0    256    -->     0
  Macrocell Resets                256        1    255    -->     0
  Macrocell Presets               256        0    256    -->     0

Global Routing Pool               324       51    273    -->    15
  GRP from IFB                     ..        3     ..    -->    ..
    (from input signals)           ..        3     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       48     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      0    14    14      0/4      0    3      0             13        5        3
  GLB    B      1     3     4      0/4      0    2      0             14        5        2
  GLB    C      0    14    14      2/4      0    4      0             12       10        4
  GLB    D      1    14    15      0/4      0    6      0             10       10        6
-------------------------------------------------------------------------------------------
  GLB    E      3     9    12      0/4      0    2      0             14       15        4
  GLB    F     11     0    11      0/4      0    1      0             15       13        3
  GLB    G     11     0    11      0/4      0    1      0             15       13        3
  GLB    H      2    10    12      2/4      0    2      0             14       26        6
-------------------------------------------------------------------------------------------
  GLB    I      3    10    13      2/4      0    3      0             13       27        7
  GLB    J     11     0    11      0/4      0    1      0             15       12        3
  GLB    K      4     3     7      3/4      0    3      0             13        8        4
  GLB    L      0     7     7      3/4      0    3      0             13       18        5
-------------------------------------------------------------------------------------------
  GLB    M      0     7     7      3/4      0    3      0             13       17        4
  GLB    N      1    13    14      1/4      0   11      0              5       29       11
  GLB    O      2    11    13      1/4      0    7      0              9       21        7
  GLB    P      0    11    11      0/4      0    7      0              9       19        7
-------------------------------------------------------------------------------------------
TOTALS:        50   126   176     17/64     0   59      0            197      248       79

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   0      0         0      0      0      0      0
  GLB    B   0      0         0      0      0      0      0
  GLB    C   0      0         0      0      0      0      0
  GLB    D   0      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    E   1      0         1      0      0      0      0
  GLB    F   1      0         0      0      0      0      0
  GLB    G   1      0         0      0      0      0      0
  GLB    H   1      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    I   1      0         0      0      0      1      0
  GLB    J   1      0         0      0      0      0      0
  GLB    K   0      0         0      0      0      0      0
  GLB    L   0      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    M   0      0         0      0      0      0      0
  GLB    N   1      0         4      1      0      0      0
  GLB    O   1      0         2      2      0      0      0
  GLB    P   1      0         2      2      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              Yes
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                              08DD (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
-----------------------------------------------------------------------------------
1     | GND   |   -  |    |        |                 |       |
2     | TDI   |   -  |    |        |                 |       |
3     |  I_O  |   0  |C12 |    *   |LVCMOS18         | Input |KeyClock
4     |  I_O  |   0  |C10 |    *   |LVCMOS18         | Input |KeyData
5     |  I_O  |   0  |C6  |        |                 |       |
6     |  I_O  |   0  |C2  |        |                 |       |
7     |GNDIO0 |   -  |    |        |                 |       |
8     |  I_O  |   0  |D12 |        |                 |       |
9     |  I_O  |   0  |D10 |        |                 |       |
10    |  I_O  |   0  |D6  |        |                 |       |
11    |  I_O  |   0  |D4  |        |                 |       |
12    | IN0   |   0  |    |        |                 |       |
13    |VCCIO0 |   -  |    |        |                 |       |
14    |  I_O  |   0  |E4  |        |                 |       |
15    |  I_O  |   0  |E6  |        |                 |       |
16    |  I_O  |   0  |E10 |        |                 |       |
17    |  I_O  |   0  |E12 |        |                 |       |
18    |GNDIO0 |   -  |    |        |                 |       |
19    |  I_O  |   0  |F2  |        |                 |       |
20    |  I_O  |   0  |F6  |        |                 |       |
21    |  I_O  |   0  |F10 |        |                 |       |
22    |  I_O  |   0  |F12 |        |                 |       |
23    | IN1   |   0  |    |        |                 |       |
24    | TCK   |   -  |    |        |                 |       |
25    | VCC   |   -  |    |        |                 |       |
26    | GND   |   -  |    |        |                 |       |
27    | IN2   |   0  |    |        |                 |       |
28    |  I_O  |   0  |G12 |        |                 |       |
29    |  I_O  |   0  |G10 |        |                 |       |
30    |  I_O  |   0  |G6  |        |                 |       |
31    |  I_O  |   0  |G2  |        |                 |       |
32    |GNDIO0 |   -  |    |        |                 |       |
33    |VCCIO0 |   -  |    |        |                 |       |
34    |  I_O  |   0  |H12 |        |                 |       |
35    |  I_O  |   0  |H10 |        |                 |       |
36    |  I_O  |   0  |H6  |    *   |LVCMOS18         | Output|save_0_
37    |  I_O  |   0  |H2  |    *   |LVCMOS18         | Output|save_1_
38    |INCLK1 |   0  |    |    *   |LVCMOS18         | Input |reset
39    |INCLK2 |   1  |    |        |                 |       |
40    | VCC   |   -  |    |        |                 |       |
41    |  I_O  |   1  |I2  |    *   |LVCMOS18         | Output|save_2_
42    |  I_O  |   1  |I6  |    *   |LVCMOS18         | Output|save_3_
43    |  I_O  |   1  |I10 |        |                 |       |
44    |  I_O  |   1  |I12 |        |                 |       |
45    |VCCIO1 |   -  |    |        |                 |       |
46    |GNDIO1 |   -  |    |        |                 |       |
47    |  I_O  |   1  |J2  |        |                 |       |
48    |  I_O  |   1  |J6  |        |                 |       |
49    |  I_O  |   1  |J10 |        |                 |       |
50    |  I_O  |   1  |J12 |        |                 |       |
51    | GND   |   -  |    |        |                 |       |
52    | TMS   |   -  |    |        |                 |       |
53    |  I_O  |   1  |K12 |        |                 |       |
54    |  I_O  |   1  |K10 |    *   |LVCMOS18         | Output|LED_VCC4
55    |  I_O  |   1  |K6  |    *   |LVCMOS18         | Output|LED_VCC3
56    |  I_O  |   1  |K2  |    *   |LVCMOS18         | Output|b
57    |GNDIO1 |   -  |    |        |                 |       |
58    |  I_O  |   1  |L12 |    *   |LVCMOS18         | Output|g
59    |  I_O  |   1  |L10 |        |                 |       |
60    |  I_O  |   1  |L6  |    *   |LVCMOS18         | Output|f
61    |  I_O  |   1  |L4  |    *   |LVCMOS18         | Output|a
62    | IN3   |   1  |    |        |                 |       |
63    |VCCIO1 |   -  |    |        |                 |       |
64    |  I_O  |   1  |M4  |    *   |LVCMOS18         | Output|d
65    |  I_O  |   1  |M6  |    *   |LVCMOS18         | Output|e
66    |  I_O  |   1  |M10 |    *   |LVCMOS18         | Output|c
67    |  I_O  |   1  |M12 |        |                 |       |
68    |GNDIO1 |   -  |    |        |                 |       |
69    |  I_O  |   1  |N2  |        |                 |       |
70    |  I_O  |   1  |N6  |        |                 |       |
71    |  I_O  |   1  |N10 |        |                 |       |
72    |  I_O  |   1  |N12 |    *   |LVCMOS18         | Output|LED_VCC1
73    | IN4   |   1  |    |        |                 |       |
74    | TDO   |   -  |    |        |                 |       |
75    | VCC   |   -  |    |        |                 |       |
76    | GND   |   -  |    |        |                 |       |
77    | IN5   |   1  |    |        |                 |       |
78    |  I_O  |   1  |O12 |    *   |LVCMOS18         | Output|LED_VCC2
79    |  I_O  |   1  |O10 |        |                 |       |
80    |  I_O  |   1  |O6  |        |                 |       |
81    |  I_O  |   1  |O2  |        |                 |       |
82    |GNDIO1 |   -  |    |        |                 |       |
83    |VCCIO1 |   -  |    |        |                 |       |
84    |  I_O  |   1  |P12 |        |                 |       |
85    |  I_O  |   1  |P10 |        |                 |       |
86    |  I_O  |   1  |P6  |        |                 |       |
87    | I_O/OE|   1  |P2  |        |                 |       |
88    |INCLK3 |   1  |    |    *   |LVCMOS18         | Input |clk
89    |INCLK0 |   0  |    |        |                 |       |
90    | VCC   |   -  |    |        |                 |       |
91    | I_O/OE|   0  |A2  |        |                 |       |
92    |  I_O  |   0  |A6  |        |                 |       |
93    |  I_O  |   0  |A10 |        |                 |       |
94    |  I_O  |   0  |A12 |        |                 |       |
95    |VCCIO0 |   -  |    |        |                 |       |
96    |GNDIO0 |   -  |    |        |                 |       |
97    |  I_O  |   0  |B2  |        |                 |       |
98    |  I_O  |   0  |B6  |        |                 |       |
99    |  I_O  |   0  |B10 |        |                 |       |
100   |  I_O  |   0  |B12 |        |                 |       |
-----------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type                       Pullup Signal
---------------------------------------------------
   3   C  I/O   1  --------I-------      Up KeyClock
   4   C  I/O   3  -------------NOP      Up KeyData
  88  -- INCLK     ----------------      Up clk
  38  -- INCLK  16 ABCDEFGHIJKLMNOP      Up reset
---------------------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
---------------------------------------------------------------------------------
  72   N  0  -   0  1 COM                   ----------------  Fast     Up LED_VCC1
  78   O  3  1   2  1 DFF      R            ----------------  Fast     Up LED_VCC2
  55   K  3  1   1  1 DFF      R            ----------------  Fast     Up LED_VCC3
  54   K  3  1   1  1 DFF      R            ----------------  Fast     Up LED_VCC4
  61   L  7  1   6  2 DFF      R            ----------------  Fast     Up a
  56   K  7  1   6  2 DFF      R            ----------------  Fast     Up b
  66   M  7  1   5  1 DFF      R            ----------------  Fast     Up c
  64   M  7  1   7  2 DFF      R            ----------------  Fast     Up d
  65   M  7  1   5  1 DFF      R            ----------------  Fast     Up e
  60   L  7  1   7  2 DFF      R            ----------------  Fast     Up f
  58   L  7  1   5  1 DFF      R            ----------------  Fast     Up g
  36   H 11  1  13  3 LAT      R         2  ------GH--------  Fast     Up save_0_
  37   H 11  1  13  3 LAT      R         2  ----E--H--------  Fast     Up save_1_
  41   I 11  1  13  3 LAT      R         2  -----F--I-------  Fast     Up save_2_
  42   I 11  1  12  3 LAT      R         2  --------IJ------  Fast     Up save_3_
---------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P                     Signal
-----------------------------------------------------------------------------
 6   N  3  1   2  1 DFF  *   S       6  ----EFGHIJ------  A0_LastRxData_0_
 7   N  3  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_LastRxData_1_
 9   O  3  1   2  1 DFF  *   S       6  ----EFGHIJ------  A0_LastRxData_2_
 7   P  3  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_LastRxData_3_
 8   N  3  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_LastRxData_4_
 9   N  3  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_LastRxData_5_
12   O  3  1   2  1 DFF  *   S       6  ----EFGHIJ------  A0_LastRxData_6_
 9   P  3  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_LastRxData_7_
 4   G 11  1  13  3 LAT    * R       3  ----------KLM---  A0_PS_Datalatr_0_reg
 3   E 11  1  13  3 LAT    * R       3  ----------KLM---  A0_PS_Datalatr_1_reg
 4   F 11  1  13  3 LAT    * R       3  ----------KLM---  A0_PS_Datalatr_2_reg
 4   J 11  1  12  3 LAT    * R       3  ----------KLM---  A0_PS_Datalatr_3_reg
 1   N  9  1   4  1 DFF      R *     1  -------------N--  A0_RxData_1_
 2   N  9  1   4  1 DFF      R *     1  -------------N--  A0_RxData_2_
 1   O  9  1   4  1 DFF      R *     1  --------------O-  A0_RxData_3_
 0   P  9  1   4  1 DFF      R *     1  ---------------P  A0_RxData_4_
 3   N  9  1   4  1 DFF      R *     1  -------------N--  A0_RxData_5_
 4   N  9  1   4  1 DFF      R *     1  -------------N--  A0_RxData_6_
 3   O  9  1   4  1 DFF      R *     1  --------------O-  A0_RxData_7_
 1   P  9  1   4  1 DFF      R *     1  ---------------P  A0_RxData_8_
 3   P  7  1   3  1 DFF    * R *     3  -------------NOP  A0_counter_0_
 5   N  7  1   4  1 DFF    * R *     3  -------------NOP  A0_counter_1_
 5   O  7  1   4  1 DFF    * R *     3  -------------NOP  A0_counter_2_
 5   P  7  1   3  1 DFF    * R *     3  -------------NOP  A0_counter_3_
 5   I  2  -   2  1 DFF    * R       1  -------------N--  A0_inst_KeyClock_r0
12   N  2  1   1  1 DFF    * R       3  -------------NOP  A0_inst_KeyClock_r1
12   P  2  1   1  1 DFF    * R       3  -------------NOP  A0_inst_KeyClock_r2
 9   E 10  1   2  1 DFF    * R       6  ----EFGHIJ------  A0_inst_LedEn
 7   O  6  1   3  1 DFF  *   S *     4  ----E--------NOP  A0_inst_RxEn
12   D  2  1   1  1 DFF    * R       4  ABCD------------  B0_count_0_
 7   D 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_10_
10   A 12  1   1  1 TFF    * R       3  A-CD------------  B0_count_11_
 5   A 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_12_
 9   B  3  1   2  1 DFF    * R       4  ABCD------------  B0_count_1_
 3   B  4  1   3  1 DFF    * R       4  ABCD------------  B0_count_2_
 1   C  5  1   4  1 DFF    * R       3  A-CD------------  B0_count_3_
 3   C 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_4_
 3   D 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_5_
 2   A 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_6_
 9   D  8  1   1  1 TFF    * R       3  A-CD------------  B0_count_7_
 5   D 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_8_
10   C 14  1   2  1 TFF    * R       3  A-CD------------  B0_count_9_
 6   C 14  1   2  1 TFF      R       5  ---D------KLM-O-  B0_scancnt_0_
 1   D 15  1   2  1 TFF      R       4  ----------KLM-O-  B0_scancnt_1_
-----------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
A0_LastRxData_0_.D = A0_RxData_1_.Q ; (1 pterm, 1 signal)
A0_LastRxData_0_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_0_.AP = !reset ; (1 pterm, 1 signal)

A0_LastRxData_1_.D = A0_RxData_2_.Q ; (1 pterm, 1 signal)
A0_LastRxData_1_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_1_.AR = !reset ; (1 pterm, 1 signal)

A0_LastRxData_2_.D = A0_RxData_3_.Q ; (1 pterm, 1 signal)
A0_LastRxData_2_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_2_.AP = !reset ; (1 pterm, 1 signal)

A0_LastRxData_3_.D = A0_RxData_4_.Q ; (1 pterm, 1 signal)
A0_LastRxData_3_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_3_.AR = !reset ; (1 pterm, 1 signal)

A0_LastRxData_4_.D = A0_RxData_5_.Q ; (1 pterm, 1 signal)
A0_LastRxData_4_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_4_.AR = !reset ; (1 pterm, 1 signal)

A0_LastRxData_5_.D = A0_RxData_6_.Q ; (1 pterm, 1 signal)
A0_LastRxData_5_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_5_.AR = !reset ; (1 pterm, 1 signal)

A0_LastRxData_6_.D = A0_RxData_7_.Q ; (1 pterm, 1 signal)
A0_LastRxData_6_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_6_.AP = !reset ; (1 pterm, 1 signal)

A0_LastRxData_7_.D = A0_RxData_8_.Q ; (1 pterm, 1 signal)
A0_LastRxData_7_.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_LastRxData_7_.AR = !reset ; (1 pterm, 1 signal)

A0_PS_Datalatr_0_reg.D = save_0_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
    # save_0_.Q & !A0_LastRxData_0_.Q & A0_LastRxData_6_.Q
    # save_0_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_0_.Q & A0_LastRxData_1_.Q & !A0_LastRxData_4_.Q
    # save_0_.Q & A0_LastRxData_0_.Q & A0_LastRxData_4_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q & !A0_LastRxData_6_.Q
       & !A0_LastRxData_7_.Q
    # save_0_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_0_.Q & !A0_LastRxData_2_.Q
    # save_0_.Q & A0_LastRxData_7_.Q ; (13 pterms, 9 signals)
A0_PS_Datalatr_0_reg.LH = !A0_inst_LedEn.Q ; (1 pterm, 1 signal)
A0_PS_Datalatr_0_reg.AR = !reset ; (1 pterm, 1 signal)

A0_PS_Datalatr_1_reg.D = save_1_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
    # save_1_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_4_.Q
    # save_1_.Q & A0_LastRxData_3_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_5_.Q & !A0_LastRxData_6_.Q
       & !A0_LastRxData_7_.Q
    # save_1_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_1_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_1_.Q & A0_LastRxData_7_.Q
    # save_1_.Q & !A0_LastRxData_2_.Q ; (13 pterms, 9 signals)
A0_PS_Datalatr_1_reg.LH = !A0_inst_LedEn.Q ; (1 pterm, 1 signal)
A0_PS_Datalatr_1_reg.AR = !reset ; (1 pterm, 1 signal)

A0_PS_Datalatr_2_reg.D = save_2_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # save_2_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_2_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_2_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_2_.Q & !A0_LastRxData_2_.Q
    # save_2_.Q & A0_LastRxData_7_.Q ; (13 pterms, 9 signals)
A0_PS_Datalatr_2_reg.LH = !A0_inst_LedEn.Q ; (1 pterm, 1 signal)
A0_PS_Datalatr_2_reg.AR = !reset ; (1 pterm, 1 signal)

A0_PS_Datalatr_3_reg.D = save_3_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_3_.Q
       & A0_LastRxData_4_.Q
    # save_3_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_4_.Q
       & !A0_LastRxData_5_.Q
    # save_3_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
       & !A0_LastRxData_4_.Q
    # save_3_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # save_3_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_3_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_3_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_3_.Q & A0_LastRxData_7_.Q
    # save_3_.Q & !A0_LastRxData_2_.Q ; (12 pterms, 9 signals)
A0_PS_Datalatr_3_reg.LH = !A0_inst_LedEn.Q ; (1 pterm, 1 signal)
A0_PS_Datalatr_3_reg.AR = !reset ; (1 pterm, 1 signal)

A0_RxData_1_.D.X1 = !KeyData & A0_counter_0_.Q & !A0_counter_1_.Q
       & !A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_1_.Q
    # KeyData & A0_counter_0_.Q & !A0_counter_1_.Q & !A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_1_.Q ; (2 pterms, 6 signals)
A0_RxData_1_.D.X2 = A0_RxData_1_.Q ; (1 pterm, 1 signal)
A0_RxData_1_.C = clk ; (1 pterm, 1 signal)
A0_RxData_1_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_2_.D.X1 = !KeyData & !A0_counter_0_.Q & A0_counter_1_.Q
       & !A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_2_.Q
    # KeyData & !A0_counter_0_.Q & A0_counter_1_.Q & !A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_2_.Q ; (2 pterms, 6 signals)
A0_RxData_2_.D.X2 = A0_RxData_2_.Q ; (1 pterm, 1 signal)
A0_RxData_2_.C = clk ; (1 pterm, 1 signal)
A0_RxData_2_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_3_.D.X1 = !KeyData & A0_counter_0_.Q & A0_counter_1_.Q
       & !A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_3_.Q
    # KeyData & A0_counter_0_.Q & A0_counter_1_.Q & !A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_3_.Q ; (2 pterms, 6 signals)
A0_RxData_3_.D.X2 = A0_RxData_3_.Q ; (1 pterm, 1 signal)
A0_RxData_3_.C = clk ; (1 pterm, 1 signal)
A0_RxData_3_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_4_.D.X1 = !KeyData & !A0_counter_0_.Q & !A0_counter_1_.Q
       & A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_4_.Q
    # KeyData & !A0_counter_0_.Q & !A0_counter_1_.Q & A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_4_.Q ; (2 pterms, 6 signals)
A0_RxData_4_.D.X2 = A0_RxData_4_.Q ; (1 pterm, 1 signal)
A0_RxData_4_.C = clk ; (1 pterm, 1 signal)
A0_RxData_4_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_5_.D.X1 = !KeyData & A0_counter_0_.Q & !A0_counter_1_.Q
       & A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_5_.Q
    # KeyData & A0_counter_0_.Q & !A0_counter_1_.Q & A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_5_.Q ; (2 pterms, 6 signals)
A0_RxData_5_.D.X2 = A0_RxData_5_.Q ; (1 pterm, 1 signal)
A0_RxData_5_.C = clk ; (1 pterm, 1 signal)
A0_RxData_5_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_6_.D.X1 = !KeyData & !A0_counter_0_.Q & A0_counter_1_.Q
       & A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_6_.Q
    # KeyData & !A0_counter_0_.Q & A0_counter_1_.Q & A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_6_.Q ; (2 pterms, 6 signals)
A0_RxData_6_.D.X2 = A0_RxData_6_.Q ; (1 pterm, 1 signal)
A0_RxData_6_.C = clk ; (1 pterm, 1 signal)
A0_RxData_6_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_7_.D.X1 = !KeyData & A0_counter_0_.Q & A0_counter_1_.Q
       & A0_counter_2_.Q & !A0_counter_3_.Q & A0_RxData_7_.Q
    # KeyData & A0_counter_0_.Q & A0_counter_1_.Q & A0_counter_2_.Q
       & !A0_counter_3_.Q & !A0_RxData_7_.Q ; (2 pterms, 6 signals)
A0_RxData_7_.D.X2 = A0_RxData_7_.Q ; (1 pterm, 1 signal)
A0_RxData_7_.C = clk ; (1 pterm, 1 signal)
A0_RxData_7_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_RxData_8_.D.X1 = !KeyData & !A0_counter_0_.Q & !A0_counter_1_.Q
       & !A0_counter_2_.Q & A0_counter_3_.Q & A0_RxData_8_.Q
    # KeyData & !A0_counter_0_.Q & !A0_counter_1_.Q & !A0_counter_2_.Q
       & A0_counter_3_.Q & !A0_RxData_8_.Q ; (2 pterms, 6 signals)
A0_RxData_8_.D.X2 = A0_RxData_8_.Q ; (1 pterm, 1 signal)
A0_RxData_8_.C = clk ; (1 pterm, 1 signal)
A0_RxData_8_.CE = reset & !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 3 signals)

A0_counter_0_.D = !A0_counter_0_.Q & !A0_counter_1_.Q & !A0_counter_2_.Q
    # !A0_counter_0_.Q & !A0_counter_3_.Q ; (2 pterms, 4 signals)
A0_counter_0_.C = clk ; (1 pterm, 1 signal)
A0_counter_0_.CE = !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 2 signals)
A0_counter_0_.AR = !reset ; (1 pterm, 1 signal)

A0_counter_1_.D = A0_counter_0_.Q & !A0_counter_1_.Q & !A0_counter_2_.Q
    # !A0_counter_0_.Q & A0_counter_1_.Q & !A0_counter_3_.Q
    # A0_counter_0_.Q & !A0_counter_1_.Q & !A0_counter_3_.Q ; (3 pterms, 4 signals)
A0_counter_1_.C = clk ; (1 pterm, 1 signal)
A0_counter_1_.CE = !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 2 signals)
A0_counter_1_.AR = !reset ; (1 pterm, 1 signal)

A0_counter_2_.D = A0_counter_0_.Q & A0_counter_1_.Q & !A0_counter_2_.Q
       & !A0_counter_3_.Q
    # !A0_counter_1_.Q & A0_counter_2_.Q & !A0_counter_3_.Q
    # !A0_counter_0_.Q & A0_counter_2_.Q & !A0_counter_3_.Q ; (3 pterms, 4 signals)
A0_counter_2_.C = clk ; (1 pterm, 1 signal)
A0_counter_2_.CE = !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 2 signals)
A0_counter_2_.AR = !reset ; (1 pterm, 1 signal)

A0_counter_3_.D = A0_counter_0_.Q & A0_counter_1_.Q & A0_counter_2_.Q
       & !A0_counter_3_.Q
    # !A0_counter_1_.Q & !A0_counter_2_.Q & A0_counter_3_.Q ; (2 pterms, 4 signals)
A0_counter_3_.C = clk ; (1 pterm, 1 signal)
A0_counter_3_.CE = !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 2 signals)
A0_counter_3_.AR = !reset ; (1 pterm, 1 signal)

A0_inst_KeyClock_r0.D = KeyClock ; (1 pterm, 1 signal)
A0_inst_KeyClock_r0.C = clk ; (1 pterm, 1 signal)
A0_inst_KeyClock_r0.AR = !reset ; (1 pterm, 1 signal)

A0_inst_KeyClock_r1.D = A0_inst_KeyClock_r0.Q ; (1 pterm, 1 signal)
A0_inst_KeyClock_r1.C = clk ; (1 pterm, 1 signal)
A0_inst_KeyClock_r1.AR = !reset ; (1 pterm, 1 signal)

A0_inst_KeyClock_r2.D = A0_inst_KeyClock_r1.Q ; (1 pterm, 1 signal)
A0_inst_KeyClock_r2.C = clk ; (1 pterm, 1 signal)
A0_inst_KeyClock_r2.AR = !reset ; (1 pterm, 1 signal)

A0_inst_LedEn.D = !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
       & !A0_LastRxData_2_.Q & !A0_LastRxData_3_.Q & A0_LastRxData_4_.Q
       & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q & A0_LastRxData_7_.Q ; (1 pterm, 8 signals)
A0_inst_LedEn.C = !A0_inst_RxEn.Q ; (1 pterm, 1 signal)
A0_inst_LedEn.AR = !reset ; (1 pterm, 1 signal)

A0_inst_RxEn.D = !A0_counter_1_.Q & !A0_counter_2_.Q
    # !A0_counter_3_.Q ; (2 pterms, 3 signals)
A0_inst_RxEn.C = clk ; (1 pterm, 1 signal)
A0_inst_RxEn.CE = !A0_inst_KeyClock_r1.Q & A0_inst_KeyClock_r2.Q ; (1 pterm, 2 signals)
A0_inst_RxEn.AP = !reset ; (1 pterm, 1 signal)

B0_count_0_.D = !B0_count_0_.Q ; (1 pterm, 1 signal)
B0_count_0_.C = clk ; (1 pterm, 1 signal)
B0_count_0_.AR = !reset ; (1 pterm, 1 signal)

B0_count_10_.T = !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_7_.Q & B0_count_0_.Q & B0_count_1_.Q
       & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q
       & B0_count_8_.Q & B0_count_9_.Q ; (2 pterms, 13 signals)
B0_count_10_.C = clk ; (1 pterm, 1 signal)
B0_count_10_.AR = !reset ; (1 pterm, 1 signal)

B0_count_11_.T = B0_count_4_.Q & B0_count_7_.Q & B0_count_0_.Q & B0_count_1_.Q
       & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q
       & B0_count_8_.Q & B0_count_9_.Q & B0_count_10_.Q ; (1 pterm, 11 signals)
B0_count_11_.C = clk ; (1 pterm, 1 signal)
B0_count_11_.AR = !reset ; (1 pterm, 1 signal)

B0_count_12_.T = !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_7_.Q & B0_count_11_.Q & B0_count_0_.Q
       & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q
       & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q & B0_count_10_.Q ; (2 pterms, 13 signals)
B0_count_12_.C = clk ; (1 pterm, 1 signal)
B0_count_12_.AR = !reset ; (1 pterm, 1 signal)

B0_count_1_.D = B0_count_0_.Q & !B0_count_1_.Q
    # !B0_count_0_.Q & B0_count_1_.Q ; (2 pterms, 2 signals)
B0_count_1_.C = clk ; (1 pterm, 1 signal)
B0_count_1_.AR = !reset ; (1 pterm, 1 signal)

B0_count_2_.D = B0_count_0_.Q & B0_count_1_.Q & !B0_count_2_.Q
    # !B0_count_1_.Q & B0_count_2_.Q
    # !B0_count_0_.Q & B0_count_2_.Q ; (3 pterms, 3 signals)
B0_count_2_.C = clk ; (1 pterm, 1 signal)
B0_count_2_.AR = !reset ; (1 pterm, 1 signal)

B0_count_3_.D = B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & !B0_count_3_.Q
    # !B0_count_2_.Q & B0_count_3_.Q
    # !B0_count_1_.Q & B0_count_3_.Q
    # !B0_count_0_.Q & B0_count_3_.Q ; (4 pterms, 4 signals)
B0_count_3_.C = clk ; (1 pterm, 1 signal)
B0_count_3_.AR = !reset ; (1 pterm, 1 signal)

B0_count_4_.T.X1 = B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q
       & B0_count_3_.Q ; (1 pterm, 4 signals)
B0_count_4_.T.X2 = !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q ; (1 pterm, 13 signals)
B0_count_4_.C = clk ; (1 pterm, 1 signal)
B0_count_4_.AR = !reset ; (1 pterm, 1 signal)

B0_count_5_.T = !B0_count_7_.Q & !B0_count_11_.Q & B0_count_0_.Q
       & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q
       & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q & B0_count_10_.Q
       & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q
       & B0_count_3_.Q ; (2 pterms, 13 signals)
B0_count_5_.C = clk ; (1 pterm, 1 signal)
B0_count_5_.AR = !reset ; (1 pterm, 1 signal)

B0_count_6_.T = !B0_count_7_.Q & !B0_count_11_.Q & B0_count_0_.Q
       & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q
       & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q & B0_count_10_.Q
       & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q
       & B0_count_3_.Q & B0_count_5_.Q ; (2 pterms, 13 signals)
B0_count_6_.C = clk ; (1 pterm, 1 signal)
B0_count_6_.AR = !reset ; (1 pterm, 1 signal)

B0_count_7_.T = B0_count_4_.Q & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q
       & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q ; (1 pterm, 7 signals)
B0_count_7_.C = clk ; (1 pterm, 1 signal)
B0_count_7_.AR = !reset ; (1 pterm, 1 signal)

B0_count_8_.T = !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_7_.Q & B0_count_0_.Q & B0_count_1_.Q
       & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q ; (2 pterms, 13 signals)
B0_count_8_.C = clk ; (1 pterm, 1 signal)
B0_count_8_.AR = !reset ; (1 pterm, 1 signal)

B0_count_9_.T = !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q
    # B0_count_4_.Q & B0_count_7_.Q & B0_count_0_.Q & B0_count_1_.Q
       & B0_count_2_.Q & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q
       & B0_count_8_.Q ; (2 pterms, 13 signals)
B0_count_9_.C = clk ; (1 pterm, 1 signal)
B0_count_9_.AR = !reset ; (1 pterm, 1 signal)

B0_scancnt_0_.T = reset & !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q & B0_count_3_.Q
       & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q & B0_count_9_.Q
       & B0_count_10_.Q & B0_count_12_.Q ; (1 pterm, 14 signals)
B0_scancnt_0_.C = clk ; (1 pterm, 1 signal)

B0_scancnt_1_.T = reset & !B0_count_4_.Q & !B0_count_7_.Q & !B0_count_11_.Q
       & B0_scancnt_0_.Q & B0_count_0_.Q & B0_count_1_.Q & B0_count_2_.Q
       & B0_count_3_.Q & B0_count_5_.Q & B0_count_6_.Q & B0_count_8_.Q
       & B0_count_9_.Q & B0_count_10_.Q & B0_count_12_.Q ; (1 pterm, 15 signals)
B0_scancnt_1_.C = clk ; (1 pterm, 1 signal)

LED_VCC1 = 0 ; (0 pterm, 0 signal)

LED_VCC2.D = reset & B0_scancnt_1_.Q & !B0_scancnt_0_.Q ; (1 pterm, 3 signals)
LED_VCC2.C = clk ; (1 pterm, 1 signal)

LED_VCC3.D = reset & !B0_scancnt_1_.Q & B0_scancnt_0_.Q ; (1 pterm, 3 signals)
LED_VCC3.C = clk ; (1 pterm, 1 signal)

LED_VCC4.D = reset & !B0_scancnt_1_.Q & !B0_scancnt_0_.Q ; (1 pterm, 3 signals)
LED_VCC4.C = clk ; (1 pterm, 1 signal)

a.D = !B0_scancnt_1_.Q & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !reset ; (6 pterms, 7 signals)
a.C = clk ; (1 pterm, 1 signal)

b.D = !B0_scancnt_1_.Q & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !reset ; (6 pterms, 7 signals)
b.C = clk ; (1 pterm, 1 signal)

c.D = !B0_scancnt_1_.Q & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q
    # !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !reset ; (5 pterms, 7 signals)
c.C = clk ; (1 pterm, 1 signal)

d.D = !B0_scancnt_1_.Q & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # !A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & A0_PS_Datalatr_2_reg.Q & !A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_2_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !reset ; (7 pterms, 7 signals)
d.C = clk ; (1 pterm, 1 signal)

e.D = !( reset & B0_scancnt_1_.Q & B0_scancnt_0_.Q & !A0_PS_Datalatr_0_reg.Q
       & A0_PS_Datalatr_1_reg.Q
    # reset & !A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q
    # reset & B0_scancnt_0_.Q & A0_PS_Datalatr_0_reg.Q
       & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # reset & B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q
       & A0_PS_Datalatr_3_reg.Q
    # reset & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_3_reg.Q ) ; (5 pterms, 7 signals)
e.C = clk ; (1 pterm, 1 signal)

f.D = !B0_scancnt_0_.Q & A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_3_reg.Q
    # !B0_scancnt_1_.Q & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_2_reg.Q
    # !B0_scancnt_0_.Q & A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & !A0_PS_Datalatr_2_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # A0_PS_Datalatr_1_reg.Q & !A0_PS_Datalatr_2_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # !reset ; (7 pterms, 7 signals)
f.C = clk ; (1 pterm, 1 signal)

g.D = !( reset & B0_scancnt_1_.Q & !B0_scancnt_0_.Q & A0_PS_Datalatr_0_reg.Q
       & !A0_PS_Datalatr_2_reg.Q & A0_PS_Datalatr_3_reg.Q
    # reset & !A0_PS_Datalatr_0_reg.Q & A0_PS_Datalatr_1_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # reset & !A0_PS_Datalatr_1_reg.Q & A0_PS_Datalatr_2_reg.Q
       & !A0_PS_Datalatr_3_reg.Q
    # reset & !A0_PS_Datalatr_1_reg.Q & !A0_PS_Datalatr_2_reg.Q
       & A0_PS_Datalatr_3_reg.Q
    # reset & A0_PS_Datalatr_1_reg.Q & !A0_PS_Datalatr_2_reg.Q
       & !A0_PS_Datalatr_3_reg.Q ) ; (5 pterms, 7 signals)
g.C = clk ; (1 pterm, 1 signal)

save_0_.D = save_0_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
    # save_0_.Q & !A0_LastRxData_0_.Q & A0_LastRxData_6_.Q
    # save_0_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_0_.Q & A0_LastRxData_1_.Q & !A0_LastRxData_4_.Q
    # save_0_.Q & A0_LastRxData_0_.Q & A0_LastRxData_4_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q & !A0_LastRxData_6_.Q
       & !A0_LastRxData_7_.Q
    # save_0_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_0_.Q & !A0_LastRxData_2_.Q
    # save_0_.Q & A0_LastRxData_7_.Q ; (13 pterms, 9 signals)
save_0_.LH = reset & !A0_inst_LedEn.Q ; (1 pterm, 2 signals)

save_1_.D = save_1_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
    # save_1_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_4_.Q
    # save_1_.Q & A0_LastRxData_3_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_5_.Q & !A0_LastRxData_6_.Q
       & !A0_LastRxData_7_.Q
    # save_1_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # save_1_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_1_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_1_.Q & A0_LastRxData_7_.Q
    # save_1_.Q & !A0_LastRxData_2_.Q ; (13 pterms, 9 signals)
save_1_.LH = reset & !A0_inst_LedEn.Q ; (1 pterm, 2 signals)

save_2_.D = save_2_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # save_2_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_2_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_2_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_2_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_2_.Q & !A0_LastRxData_2_.Q
    # save_2_.Q & A0_LastRxData_7_.Q ; (13 pterms, 9 signals)
save_2_.LH = reset & !A0_inst_LedEn.Q ; (1 pterm, 2 signals)

save_3_.D = save_3_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_3_.Q
       & A0_LastRxData_4_.Q
    # save_3_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_4_.Q
       & !A0_LastRxData_5_.Q
    # save_3_.Q & !A0_LastRxData_1_.Q & A0_LastRxData_3_.Q
       & !A0_LastRxData_4_.Q
    # save_3_.Q & !A0_LastRxData_1_.Q & !A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q
    # save_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_6_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & A0_LastRxData_3_.Q & A0_LastRxData_4_.Q & A0_LastRxData_5_.Q
       & !A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # !A0_LastRxData_0_.Q & A0_LastRxData_1_.Q & A0_LastRxData_2_.Q
       & !A0_LastRxData_3_.Q & !A0_LastRxData_4_.Q & !A0_LastRxData_5_.Q
       & A0_LastRxData_6_.Q & !A0_LastRxData_7_.Q
    # save_3_.Q & A0_LastRxData_5_.Q & A0_LastRxData_6_.Q
    # save_3_.Q & !A0_LastRxData_0_.Q & !A0_LastRxData_1_.Q
    # save_3_.Q & A0_LastRxData_0_.Q & A0_LastRxData_1_.Q
    # save_3_.Q & A0_LastRxData_7_.Q
    # save_3_.Q & !A0_LastRxData_2_.Q ; (12 pterms, 9 signals)
save_3_.LH = reset & !A0_inst_LedEn.Q ; (1 pterm, 2 signals)




